use leptos::*;
use leptos_meta::*;
use crate::components::layout::Layout;

#[component]
pub fn App() -> impl IntoView {
    view! {
        <Stylesheet id="leptos" href="/style/output.css"/>
        <Layout />
    }
}

























// use leptos::*;
// use crate::components::layout::Layout;
//
// #[component]
// pub fn App() -> impl IntoView {
//     view! { // здесь мы вызываем компонент Layout, который является верховной абстракцией всего проекта
//         <Layout /> // то есть мы создали слой в виде компонента Layout
//     } // который по сути является левой 1/3 части, которая у нас является Меню
// } // и в этом меню у нас уже перечислены пункты меню
// // (Магазин, Личный кабинет, Сообщения, ИИ-ассистент)
// // и туда можно вносить сколько угодно новых пунктов или удалять их оттуда в виде компонентов,
// // которые мы прописываем на отдельных страницах, одновременно не забывая прописать в компоненте Layout
// // например, мы уже внесли в Layout компонент ввода города, который будет отображаться на других 2/3 части страницы
/*
    <div class="flex h-screen">
        <nav class="w-1/3 bg-gray-800 text-white p-4">
            <ul>
                <li>"Магазин"</li>
                <li>"Личный кабинет"</li>
                <li>"Сообщения"</li>
                <li>"ИИ-ассистент"</li>
            </ul>
        </nav>
        <main class="w-2/3 p-4">
            <city_input /> // вот - вводим страницу ввода города, которая автоматически занимает 2/3 страницы
            // и наша крутизна с тобой еще и в том, что какой бы пункт меню мы бы ни добавили сюда,
            // он будет отображаться также на 2/3 экрана справа в виде отдельной страницы, принадлежащей своему пункту из меню
            // и прописанным нами кодом в отдельном файле этого компонента, путь к которому мы также должны указать
            // вверху в компоненте Layout

        </main>
    </div>

 */
